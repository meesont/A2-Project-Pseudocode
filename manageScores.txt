#Pseudocode for the Manage Scores subroutine

#BEGIN MAIN PROGRAM

#BEGIN INIT VARIABLES

constant databaseUsername = 'admin' #These are examples
constant databasePassword = 'admin'
constant databaseTable = 'scoresTbl'

database = loadDatabase(databaseUsername, databasePassword, databaseTable)

#END INIT VARIABLES

recentScores = getMostRecentScores()

OUTPUT('Do you wish to change current scores or organise current scores? (Enter 'C' for change, enter 'O' for organise): ')
choice = USERINPUT

IF choice = 'C' THEN

  scores = []

  FOR i <- 1 TO 4
    OUTPUT('Manually enter the score of the first house: ')
    scores[i] = USERINPUT
  ENDFOR

  updateScores(scores, database)


ELSE IF choice = 'O' THEN

  scorePositions = getLeaderboardPositions(recentScores)

ENDIF

#BEGIN SUBROUTINES

SUBROUTINE loadDatabase(user, pass, tbl)

  databaseArray = []

  FOR i <- 1 TO DATABASE.tbl.size() THEN
    databaseArray[i] = database[i]
  ENDFOR

ENDSUBROUTINE

SUBROUTINE getMostRecentScores()

  recentScores = []

  FOR i <- 1 to database.size()
    recentScores[i] = database[i]
  ENDFOR

  FOR i <- 1 TO LEN(recentScores)
    FOR j <- (i + 1) TO LEN(recentScores)

    IF recentScores[i] > recentScores[j] THEN

      recentScores[i], recentScores[j] = recentScores[j], recentScores[i]

    ENDIF

    ENDFOR
  ENDFOR

  RETURN recentScores

ENDSUBROUTINE

SUBROUTINE updateScores(scores, database)

  FOR i <- 1 TO LEN(scores)
    database.push(scores[i], database[i])
  ENDFOR

ENDSUBROUTINE


SUBROTUINE getLeaderboardPositions(scores)

  FOR i <- 1 TO LEN()
    FOR j <- (i + 1) TO LEN(scores)

    IF scores[i] > scores[j] THEN

      scores[i], scores[j] = scores[j], scores[i]

    ENDIF

    ENDFOR
  ENDFOR

  RETURN scores

ENDSUBROUTINE

#END SUBROUTINES
